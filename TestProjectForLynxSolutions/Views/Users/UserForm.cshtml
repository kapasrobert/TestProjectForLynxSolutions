@model TestProjectForLynxSolutions.Models.User

@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>New User</h2>

@using (@Html.BeginForm("Save", "Users"))
{
    @Html.ValidationSummary()

    <div class="form-group">
        @Html.LabelFor(m => m.UserName)
        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
        @Html.ValidationMessageFor(u => u.UserName)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Password)
        @Html.TextBoxFor(m => m.Password, new { @class = "form-control" })
        @Html.ValidationMessageFor(u => u.Password)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.FirstName)
        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
        @Html.ValidationMessageFor(u => u.FirstName)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.LastName)
        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
        @Html.ValidationMessageFor(u => u.LastName)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Email)
        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        @Html.ValidationMessageFor(u => u.Email);
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.PhoneNumber)
        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
        @Html.ValidationMessageFor(u => u.PhoneNumber)
    </div>

    @Html.HiddenFor(m => m.Id)
    <button type="submit" class="btn btn-primary">Save</button>
}


@section scripts
{
    <!-- Enable client side validation, Razor engine does the rest based on User model DataAnnotations;

         Ex: UserName textbox has all the validation values gathered from the User.UserName DataAnnotations and
         jquery.validate goes through each value of the textbox and compares it to the input value from the user;

         only works with standard validation, for more complex validation we use server side validation to do the hard work-->
    @Scripts.Render("~/bundles/jqueryval")
}
